<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="authMapper">
	<resultMap type="com.example.demo.auth.AuthVo" id="AuthVoResultSet">
	    <result column="id" property="id"/>
	    <result column="user_id" property="userId"/>
	    <result column="email" property="email"/>
	    <result column="password" property="password"/>
	    <result column="created_at" property="createdAt"/>
	</resultMap>
	
    <!-- userId로 회원 조회 -->
    <select id="findByUserId" parameterType="com.example.demo.auth.AuthVo" resultMap="AuthVoResultSet">
        SELECT id, user_id, email, password, created_at
        FROM auth
        WHERE user_id = #{userId};
    </select>
    
    <!-- email로 회원 조회 -->
    <select id="findByEmail" parameterType="com.example.demo.auth.AuthVo" resultMap="AuthVoResultSet">
        SELECT id, user_id, email, password, created_at
        FROM auth
        WHERE email = #{email};
    </select>

    <!-- 회원가입 -->
    <insert id="insertAuth" parameterType="com.example.demo.auth.AuthVo">
        INSERT INTO auth (user_id, email, password, created_at)
        VALUES (#{userId}, #{email}, #{password}, NOW());
    </insert>
    
    <update id="updateByUserId" parameterType="com.example.demo.auth.AuthVo">
    	UPDATE auth
    	SET password=#{password}, created_at=NOW()
    	WHERE user_id=#{userId};
    </update>
    
    <delete id="deleteByUserId" parameterType="com.example.demo.auth.AuthVo">
    	DELETE FROM auth
    	WHERE user_id =#{userId};
    </delete>
</mapper>